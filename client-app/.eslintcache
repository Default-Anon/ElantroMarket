[{"D:\\Projects\\ElantroMarket\\client-app\\src\\index.js":"1","D:\\Projects\\ElantroMarket\\client-app\\src\\reportWebVitals.js":"2","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\nav\\NavBar.jsx":"3","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\sidebar\\Sidebar.jsx":"4","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\dashboard\\ProductDashboard.jsx":"5","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\api\\agent.js":"6","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\dashboard\\ProductList.jsx":"7","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\layout\\App.js":"8","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\user\\SignIn.jsx":"9","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\user\\Login.jsx":"10","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\user\\SignUp.jsx":"11","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\user\\Profile.jsx":"12","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\product\\ProductEdit.jsx":"13","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\product\\ProductCategoryes.jsx":"14","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\pages\\category\\TVPage.jsx":"15","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\pages\\category\\ComputersPage.jsx":"16","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\pages\\category\\TabletPage.jsx":"17","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\pages\\category\\SmartphonesPage.jsx":"18","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\pages\\category\\NotebooksPage.jsx":"19","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\pages\\product\\ProductPage.jsx":"20"},{"size":447,"mtime":1610978272019,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1610809340000,"results":"23","hashOfConfig":"22"},{"size":8060,"mtime":1610272745880,"results":"24","hashOfConfig":"22"},{"size":6242,"mtime":1610179674964,"results":"25","hashOfConfig":"22"},{"size":5548,"mtime":1610190268640,"results":"26","hashOfConfig":"22"},{"size":1338,"mtime":1610981789834,"results":"27","hashOfConfig":"22"},{"size":6953,"mtime":1610879506361,"results":"28","hashOfConfig":"22"},{"size":1996,"mtime":1610272080423,"results":"29","hashOfConfig":"22"},{"size":469,"mtime":1609497608920,"results":"30","hashOfConfig":"22"},{"size":5112,"mtime":1609605169622,"results":"31","hashOfConfig":"22"},{"size":5776,"mtime":1609670322995,"results":"32","hashOfConfig":"22"},{"size":15926,"mtime":1610113013114,"results":"33","hashOfConfig":"22"},{"size":5875,"mtime":1610037942568,"results":"34","hashOfConfig":"22"},{"size":5082,"mtime":1610114077689,"results":"35","hashOfConfig":"22"},{"size":5033,"mtime":1610179950969,"results":"36","hashOfConfig":"22"},{"size":5054,"mtime":1610179979556,"results":"37","hashOfConfig":"22"},{"size":5046,"mtime":1610179956153,"results":"38","hashOfConfig":"22"},{"size":5060,"mtime":1610179968456,"results":"39","hashOfConfig":"22"},{"size":5054,"mtime":1610179975146,"results":"40","hashOfConfig":"22"},{"size":5233,"mtime":1610981932155,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1iq995v",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"44"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\ElantroMarket\\client-app\\src\\index.js",[],["96","97"],"D:\\Projects\\ElantroMarket\\client-app\\src\\reportWebVitals.js",[],"D:\\Projects\\ElantroMarket\\client-app\\src\\features\\nav\\NavBar.jsx",["98","99","100","101","102","103","104","105","106","107","108"],"import React, { useState } from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Sidebar from './../sidebar/Sidebar';\r\nimport { Container, Tooltip } from '@material-ui/core';\r\nimport { Link } from '@material-ui/core/';\r\nimport { ShoppingBasket, ShoppingCart } from '@material-ui/icons';\r\nimport { NavLink } from 'react-router-dom';\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: '1',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    backgroundColor: 'gray',\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '40ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none'\r\n    },\r\n  },\r\n  Toolbar: {\r\n    backgroundColor: 'gray'\r\n  }\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [profileStatus, setProfileStatus] = useState(false);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileClicked = () => {\r\n    const token = window.localStorage.getItem('jwt');\r\n    if (token === null) {\r\n      setProfileStatus(false);\r\n    } else {\r\n      setProfileStatus(true);\r\n    }\r\n  }\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton color=\"inherit\">\r\n          <Badge badgeContent={0} color=\"primary\">\r\n            <ShoppingCart />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Basket</p>\r\n      </MenuItem>\r\n      <MenuItem on>\r\n        {profileStatus ?\r\n          <IconButton\r\n            href=\"/account/profile\"\r\n            edge=\"end\"\r\n            aria-label=\"account of current user\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            onClick={handleProfileClicked}\r\n          >\r\n            <AccountCircle />\r\n          </IconButton> :\r\n          <IconButton\r\n            href=\"/account/login\"\r\n            edge=\"end\"\r\n            aria-label=\"account of current user\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            onClick={handleProfileClicked}\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>}\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"absolute\" color=\"inherit\" style={{ backgroundColor: 'gray' }}>\r\n        <Toolbar className={classes.Toolbar}>\r\n          <Sidebar open={open} />\r\n          <Link className={classes.title} variant=\"h6\" color=\"inherit\" noWrap href=\"http://localhost:3000\">\r\n            ElantroMarket\r\n          </Link>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <Container>\r\n              <InputBase\r\n                id=\"SearchBar1\"\r\n                placeholder=\"Input Product Name\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n              />\r\n            </Container>\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"primary\">\r\n                <ShoppingCart />\r\n              </Badge>\r\n            </IconButton>\r\n            <Tooltip title={<body style={{ fontSize: '15px' }}>Profile</body>} aria-label=\"Profile\" placement=\"bottom\" >\r\n              {profileStatus ?\r\n                <IconButton\r\n                  href=\"/account/profile\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-haspopup=\"true\"\r\n                  color=\"inherit\"\r\n                  onClick={handleProfileClicked}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton> :\r\n                <IconButton\r\n                  href=\"/account/login\"\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-haspopup=\"true\"\r\n                  color=\"inherit\"\r\n                  onClick={handleProfileClicked}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>}\r\n            </Tooltip>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\sidebar\\Sidebar.jsx",["109","110","111","112","113","114","115","116","117","118","119","120","121"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Menu, Tv, Smartphone, Laptop, Computer, Tablet, VideoLabel } from '@material-ui/icons'\r\nimport agent from '../../app/api/agent'\r\nimport { NavLink } from 'react-router-dom';\r\nconst drawerWidth = 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        background: 'gray',\r\n        color: 'white'\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(8) + 1,\r\n        },\r\n        background: 'gray',\r\n        color: 'white'\r\n    },\r\n    toolbar: {\r\n        backgroundColor: 'gray',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    paperSidebar: {\r\n        background: 'gray',\r\n        color: 'white'\r\n    },\r\n}));\r\n\r\nexport default function Sidebar(props) {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(props.open);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const HandleCategoryClicked = (category) => {\r\n\r\n    }\r\n    return (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            classes={{ paper: classes.paperSidebar, root: classes.rootSidebar }}\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                }),\r\n            }}\r\n        >\r\n            <div className={classes.toolbar}>\r\n                <IconButton\r\n                    onClick={() => { setOpen(!open); }}\r\n                    edge=\"start\"\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    style={{ paddingLeft: theme.spacing(3) }}\r\n                >\r\n                    <Menu />\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                <NavLink to={{ pathname: '/product/category/TV' }} style={{ color: 'black', textDecoration: \"none\" }}>\r\n                    <ListItem button key={'TV'}>\r\n                        <ListItemIcon><Tv /> </ListItemIcon>\r\n                        <ListItemText primary={'Телевизоры'} />\r\n                    </ListItem>\r\n                </NavLink>\r\n                <NavLink to={{ pathname: '/product/category/Notebooks' }} style={{ color: 'black', textDecoration: \"none\" }}>\r\n                    <ListItem button key={'Notebooks'}>\r\n                        <ListItemIcon><Laptop /> </ListItemIcon>\r\n                        <ListItemText primary={'Ноутбуки'} />\r\n                    </ListItem>\r\n                </NavLink>\r\n                <NavLink to={{ pathname: '/product/category/Computers' }} style={{ color: 'black', textDecoration: \"none\" }}>\r\n                    <ListItem button key={'Computers'}>\r\n                        <ListItemIcon><VideoLabel /> </ListItemIcon>\r\n                        <ListItemText primary={'Компьютеры'} />\r\n                    </ListItem>\r\n                </NavLink>\r\n                <NavLink to={{ pathname: '/product/category/Smartphones' }} style={{ color: 'black', textDecoration: \"none\" }}>\r\n                    <ListItem button key={'Smartphones'}>\r\n                        <ListItemIcon><Smartphone /></ListItemIcon>\r\n                        <ListItemText primary={'Смартфоны'} />\r\n                    </ListItem>\r\n                </NavLink>\r\n                <NavLink to={{ pathname: '/product/category/Tablets' }} style={{ color: 'black', textDecoration: \"none\" }}>\r\n                    <ListItem button key={'Tablets'}>\r\n                        <ListItemIcon><Tablet /> </ListItemIcon>\r\n                        <ListItemText primary={'Планшеты'} />\r\n                    </ListItem>\r\n                </NavLink>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Drawer>\r\n    );\r\n}\r\n","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\dashboard\\ProductDashboard.jsx",["122","123","124"],"import { Grid } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Paper, IconButton } from '@material-ui/core'\r\nimport agent from '../../app/api/agent'\r\nimport ProductList from './ProductList';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport { Tooltip } from '@material-ui/core'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Menu } from '@material-ui/icons'\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: '60px',\r\n        paddingLeft: '60px'\r\n    },\r\n    sortedSidebarBtn: {\r\n        margin: 0,\r\n        top: 'auto',\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 'auto',\r\n        position: 'fixed',\r\n    }\r\n}))\r\nexport default function ProductDashboard() {\r\n    const classes = useStyles();\r\n    const [products, setProducts] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [openImage, setOpenImage] = useState(false);\r\n    const [images, setImages] = useState([]);\r\n    const [photoIndex, setPhotoIndex] = useState(0);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const onHandleOpenImage = (images) => {\r\n        setImages(images);\r\n        setOpenImage(true);\r\n    }\r\n\r\n\r\n    const onHandleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const onHandleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searchText == \"\") {\r\n            agent.Products.list()\r\n                .then(response => {\r\n                    let products = [];\r\n                    response.forEach((product) => {\r\n                        products.push(product);\r\n                    })\r\n                    setProducts(products);\r\n                })\r\n        }\r\n        else {\r\n            agent.Filters.search('any', searchText)\r\n                .then(response => {\r\n                    let products = [];\r\n                    response.forEach((product) => {\r\n                        products.push(product);\r\n                    })\r\n                    setProducts(products);\r\n                })\r\n        }\r\n        const id = setInterval(() => { setSearchText(document.getElementById('SearchBar1').value) }, 100);\r\n        return () => clearInterval(id);\r\n    }, [searchText])\r\n    return (\r\n        <>{openImage && (\r\n            <Lightbox mainSrc={images[photoIndex].imageUrl}\r\n                nextSrc={images[(photoIndex + 1) % images.length].imageUrl}\r\n                prevSrc={images[(photoIndex + images.length - 1) % images.length].imageUrl}\r\n                onMovePrevRequest={() =>\r\n                    setPhotoIndex((photoIndex + images.length - 1) % images.length)\r\n                }\r\n                onMoveNextRequest={() =>\r\n                    setPhotoIndex((photoIndex + 1) % images.length)\r\n                }\r\n                onCloseRequest={() => { setOpenImage(false); setPhotoIndex(0) }} />\r\n        )}\r\n            <Grid container className={classes.root} spacing={2}>\r\n                <ProductList products={products} openImage={(image) => { onHandleOpenImage(image) }} />\r\n                <div className={classes.sortedSidebarBtn}>\r\n                    <Tooltip title={<p style={{ fontSize: '12px' }}>Сортировать</p>} placement=\"top\">\r\n                        <Fab color=\"primary\" aria-label=\"sort\" onClick={onHandleOpen}>\r\n                            <SortIcon />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </div>\r\n                <Drawer anchor=\"right\" open={open} onClose={onHandleClose}>\r\n                    <IconButton\r\n                        onClick={() => { setOpen(!open); }}\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        style={{}}\r\n                    >\r\n                        <Menu />\r\n                    </IconButton>\r\n                    <Divider />\r\n                    <List>\r\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <Divider />\r\n                    <List>\r\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n            </Grid >\r\n        </>\r\n    );\r\n}\r\n","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\api\\agent.js",["125"],"D:\\Projects\\ElantroMarket\\client-app\\src\\features\\dashboard\\ProductList.jsx",["126","127","128","129","130","131"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport defaultImage from '../../app/images/defaultImage.png'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Box, responsiveFontSizes, Link, Tooltip } from '@material-ui/core';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css'\r\nimport agent from '../../app/api/agent'\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Edit, Delete, Share, ShoppingCart } from '@material-ui/icons';\r\nimport ProductEdit from '../product/ProductEdit';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function ProductList(props) {\r\n    const classes = useStyles();\r\n    const [user, setUser] = useState({});\r\n    const setUserHandler = (response) => {\r\n        setUser(response);\r\n    }\r\n    useEffect(() => {\r\n        if (Object.keys(user).length === 0) {\r\n            agent.SignInManager.currentUser()\r\n                .then((response) => { setUserHandler(response) });\r\n        }\r\n    })\r\n    const ShareButtonClicked = (id) => {\r\n        navigator.clipboard.writeText(`http://localhost:3000/product/id/${id}`);\r\n    }\r\n    const DeleteButtonHandler = (id) => {\r\n        agent.Products.delete(id);\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                props.products.map((product) => {\r\n                    console.log(product);\r\n                    return (\r\n                        <Grid item lg={4} md={6} sm={6} xs={12} key={product.productId}>\r\n                            <Card className={classes.root}>\r\n                                <Grid item>\r\n                                    <CardActionArea onClick={() => { product.mainImage === null ? props.openImage(defaultImage) : props.openImage(product.images) }}>\r\n                                        <Tooltip title={<h3>На весь экран</h3>} enterTouchDelay=\"200\" arrow placement=\"right\">\r\n                                            <CardMedia\r\n                                                component=\"img\"\r\n                                                height=\"270px\"\r\n                                                alt={product.name}\r\n                                                image={product.mainImage === 'null' ? defaultImage : product.mainImage}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </CardActionArea>\r\n                                </Grid>\r\n                                <NavLink to={{ pathname: `/product/id/${product.productId}` }} style={{ textDecoration: 'none' }}>\r\n                                    <CardActionArea>\r\n                                        <Grid item>\r\n                                            <Tooltip title={<h3>Смотреть полностью</h3>} enterTouchDelay=\"200\" arrow>\r\n                                                <CardContent style={{ backgroundColor: '#5b2b6b', color: 'pink' }}>\r\n                                                    <Grid container spacing={3} direction=\"column\" >\r\n                                                        <Grid item >\r\n                                                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                                                {product.title}\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item >\r\n                                                            <Typography variant=\"button\" color=\"inherit\" style={{ fontSize: '15px', marginLeft: 'auto' }}>\r\n                                                                {product.price + ' рублей'}\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </CardContent>\r\n                                            </Tooltip>\r\n                                        </Grid>\r\n                                    </CardActionArea>\r\n                                </NavLink>\r\n                                {user.role === 'admin' ?\r\n                                    <CardActions style={{ backgroundColor: 'gray' }}>\r\n                                        <IconButton size=\"small\" color=\"primary\" onClick={() => ShareButtonClicked(product.productId)}>\r\n                                            <Share />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            size=\"small\" color=\"inherit\"\r\n                                            style={{ color: 'red', marginLeft: 'auto' }}\r\n                                            onClick={() => { DeleteButtonHandler(product.productId) }}>\r\n                                            <Delete />\r\n                                        </IconButton>\r\n                                        <NavLink to={{ pathname: '/product/edit', aboutProps: { item: product } }} >\r\n                                            <IconButton size=\"small\" color=\"inherit\" style={{ color: 'blue' }}>\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </NavLink>\r\n                                    </CardActions>\r\n                                    :\r\n                                    <CardActions style={{ backgroundColor: 'gray' }}>\r\n                                        <IconButton size=\"small\" color=\"primary\" onClick={() => ShareButtonClicked(product.productId)}>\r\n                                            <Share />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            size=\"small\" color=\"inherit\"\r\n                                            style={{ color: 'black', marginLeft: 'auto' }}>\r\n                                            <ShoppingCart />\r\n                                        </IconButton>\r\n                                    </CardActions>\r\n                                }\r\n                            </Card>\r\n                        </Grid>\r\n                    )\r\n                })}\r\n        </>)\r\n}","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\layout\\App.js",["132","133","134","135"],"import NavBar from '../../features/nav/NavBar'\nimport './App.css';\nimport ProductDashboard from '../../features/dashboard/ProductDashboard';\nimport { Route, withRouter, RouteComponentProps, Router,BrowserRouter, Switch } from 'react-router-dom'\nimport { Container } from '@material-ui/core';\nimport SignIn from '../../features/user/SignIn'\nimport SignUp from './../../features/user/SignUp';\nimport Profile from '../../features/user/Profile';\nimport ProductEdit from './../../features/product/ProductEdit';\nimport ProductCategoryes from './../../features/product/ProductCategoryes';\nimport TVPage from './../pages/category/TVPage';\nimport TabletPage from '../pages/category/TabletPage';\nimport ComputersPage from './../pages/category/ComputersPage';\nimport SmartphonesPage from './../pages/category/SmartphonesPage';\nimport NotebooksPage from './../pages/category/NotebooksPage';\nimport ProductPage from './../pages/product/ProductPage';\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <NavBar/>\n        <Switch>\n        <Route exact path='/' component={ProductDashboard} />\n        <Route exact path='/account/login' component={SignIn} />\n        <Route exact path='/account/register' component={SignUp} />\n        <Route exact path='/account/profile' component={Profile} />\n        <Route exact path=\"/product/edit\" component={ProductEdit} />\n        <Route exact path=\"/product/category\" component={ProductCategoryes}/>\n        <Route exact path=\"/product/category/TV\" component={TVPage} />\n        <Route exact path=\"/product/category/Tablets\" component={TabletPage} />\n        <Route exact path=\"/product/category/Computers\" component={ComputersPage} />\n        <Route exact path=\"/product/category/Smartphones\" component={SmartphonesPage} />\n        <Route exact path=\"/product/category/Notebooks\" component={NotebooksPage} />\n        <Route exact path=\"/product/id/:id\" component={ProductPage} />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\user\\SignIn.jsx",["136","137","138","139","140"],"import React from 'react';\r\nimport { makeStyles, theme } from '@material-ui/core/styles';\r\nimport Login from './Login'\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport SignUp from './SignUp';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: '100px',\r\n        paddingTop: '50px'\r\n    }\r\n\r\n}));\r\nconst SignIn = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Login />\r\n    );\r\n}\r\n\r\nexport default SignIn;\r\n","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\user\\Login.jsx",[],"D:\\Projects\\ElantroMarket\\client-app\\src\\features\\user\\SignUp.jsx",[],"D:\\Projects\\ElantroMarket\\client-app\\src\\features\\user\\Profile.jsx",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, theme } from '@material-ui/core/styles';\r\nimport { flexbox } from '@material-ui/system'\r\nimport { Link, Box, Card, Select, CardMedia, Container, Typography, CardActionArea, CardContent, Paper, Button, TextField, TextareaAutosize, ButtonGroup, InputLabel, MenuItem, FormControl, Switch, FormGroup } from '@material-ui/core';\r\nimport Logo from '../../app/images/logo.jpg'\r\nimport agent from '../../app/api/agent'\r\nimport { Add, Edit, Delete } from '@material-ui/icons'\r\nimport { FormControlLabel } from '@material-ui/core';\r\nimport Guid from 'guid'\r\nimport { Redirect } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginLeft: '37px',\r\n        marginTop: '64px',\r\n        [theme.breakpoints.only(\"xs\")]: {\r\n            width: '85vw'\r\n        },\r\n        [theme.breakpoints.only(\"sm\")]: {\r\n            width: '87vw'\r\n        },\r\n        [theme.breakpoints.only(\"md\")]: {\r\n            width: '90vw'\r\n        },\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            width: '92vw'\r\n        },\r\n    },\r\n    box: {\r\n        [theme.breakpoints.only('sm')]: {\r\n            width: '87vw'\r\n        },\r\n        [theme.breakpoints.only('xs')]: {\r\n            width: '84vw'\r\n        }\r\n    },\r\n    boxImage: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        [theme.breakpoints.only('lg')]: {\r\n            maxWidth: '700px'\r\n        },\r\n        border: '1px solid yellow'\r\n    },\r\n    boxName: {\r\n        border: '1px solid black',\r\n        justifyContent: 'center',\r\n        display: 'flex'\r\n    },\r\n    paper: {\r\n    },\r\n    boxBtns: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    },\r\n    cardMediaStyles: {\r\n        objectFit: 'cover'\r\n    },\r\n    InfoUser: {\r\n        display: 'flex',\r\n        minHeight: '200px',\r\n        backgroundColor: '#521b44',\r\n        color: 'pink',\r\n    },\r\n    adminForms: {\r\n        border: '1px solid green',\r\n        marginTop: '10px',\r\n    },\r\n    adminFormsCreate: {\r\n        border: '2px solid black',\r\n        [theme.breakpoints.only(\"lg\")]: {\r\n            width: '550px'\r\n        },\r\n        maxWidth: '700px',\r\n    },\r\n    textFieldStyles: {\r\n        color: 'black',\r\n    },\r\n    adminBoxButtons: {\r\n        display: 'flex'\r\n    },\r\n    textAreaDescription: {\r\n        height: '250px',\r\n        [theme.breakpoints.only('lg')]: {\r\n            width: '540px'\r\n        },\r\n        fontSize: '18px'\r\n    }\r\n}))\r\n\r\nconst Profile = () => {\r\n    const classes = useStyles();\r\n    const [items, setItems] = useState([]);\r\n    const [signOut, setSignOut] = useState(false);\r\n    const [productId, setId] = useState(\"\");\r\n    const [images, setImages] = useState([1, 2, 3, 4, 5, 6, 7])\r\n    const [item, setItem] = useState({});\r\n    const [user, setUser] = useState({});\r\n    const [createImages, setCreateImages] = useState([{}]);\r\n    const [lookImages, setLookImages] = useState(false);\r\n    const [labelCounter, setImagesLabelCounter] = useState('');\r\n    const SetImagesHandler = (imageUrl, index) => {\r\n        let new_item = [{ ...item }];\r\n        console.log(`imgUrlOld: ${new_item[0].images[index].imageUrl}`);\r\n        new_item[0].images[index].imageUrl = imageUrl;\r\n        setItem(new_item[0]);\r\n        new_item = [];\r\n        console.log(item)\r\n    }\r\n    const SetCreateImagesHandler = (imageUrl, i) => {\r\n        if (labelCounter === \"\") {\r\n            setId(Guid.create());\r\n        }\r\n        if (i === 1) {\r\n            setCreateImages([{ 'productId': labelCounter, 'imageUrl': imageUrl, 'imageId': Guid.create() }])\r\n        }\r\n        else {\r\n            let imagesBackup = [];\r\n            createImages.map((item) => {\r\n                imagesBackup.push(item);\r\n            })\r\n            imagesBackup.push({ 'productId': labelCounter, 'imageUrl': imageUrl, 'imageId': Guid.create() });\r\n            setCreateImages(imagesBackup);\r\n            setItem({ ...item, 'images': [...createImages] })\r\n            console.log(`item: ${{ ...item }} `);\r\n        }\r\n    }\r\n    const CreateButtonHandler = () => {\r\n        console.log(item);\r\n        agent.Products.create(item).then(() => setItem({}))\r\n\r\n    }\r\n    const EditButtonHandler = () => {\r\n        console.log(item);\r\n        if (item.productId != '') {\r\n            agent.Products.update(item.productId, item);\r\n        }\r\n    }\r\n    const DeleteButtonHandler = () => {\r\n        if (item.productId != '') {\r\n            agent.Products.delete(item.productId).then(() => { setItem({}); });\r\n        }\r\n    }\r\n    const SignOutButtonClicked = () => {\r\n        localStorage.removeItem('jwt');\r\n        setSignOut(true);\r\n    }\r\n    const setUserHandler = (response) => {\r\n        setUser(response);\r\n    }\r\n    const setItemHandler = (event) => { setItem(event.target.value); };\r\n    const setItemsHandler = (response) => {\r\n        let products = [];\r\n        response.forEach((product) => {\r\n            products.push(product);\r\n        })\r\n        setItems(products);\r\n    }\r\n    useEffect(() => {\r\n        if (Object.keys(user).length === 0) {\r\n            agent.SignInManager.currentUser()\r\n                .then((response) => { setUserHandler(response) });\r\n        }\r\n        if (Object.keys(items).length === 0) {\r\n            agent.Products.list()\r\n                .then((response) => {\r\n                    setItemsHandler(response);\r\n                });\r\n        }\r\n    });\r\n    return (\r\n        <Container className={classes.root}>\r\n            <Box className={classes.box}\r\n                justifyContent=\"space-between\"\r\n                flexDirection=\"row\" display=\"flex\"\r\n                flexWrap=\"wrap\">\r\n                <Box>\r\n                    <Card className={classes.boxImage}>\r\n                        <Link href=\"http://localhost:3000\">\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    height=\"200\"\r\n                                    src={Logo}\r\n                                    className={classes.cardMediaStyles}\r\n                                />\r\n                            </CardActionArea>\r\n                        </Link>\r\n                    </Card>\r\n                </Box>\r\n                <Box className={classes.boxName} justifyContent=\"space-between\" display=\"flex\" flexDirection='column'>\r\n                    <Card className={classes.InfoUser} color=\"inherit\">\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                <Typography style={{ fontSize: '25px', textAlign: 'center' }}>{user.username}</Typography>\r\n                                <Typography style={{ fontSize: '32px', textAlign: 'center' }}>Personal discount: {user.bonus}</Typography>\r\n                                <Typography style={{ fontSize: '25px', textAlign: 'center' }}>Status: {user.role}</Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Box>\r\n            </Box>\r\n            {\r\n                user.role === 'admin' ?\r\n                    <>\r\n                        <Box\r\n                            justifyContent=\"space-between\"\r\n                            flexDirection=\"row\" display=\"flex\"\r\n                            flexWrap=\"wrap\" className={classes.adminForms}>\r\n                            <Box>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"none\"\r\n                                    inputProps={{ className: classes.textFieldStyles }}\r\n                                    fullWidth\r\n                                    autoFocus\r\n                                    value={labelCounter}\r\n                                    label=\"Id\"\r\n                                    InputLabelProps={{ shrink: true }}\r\n                                    onChange={(event) => { setItem({ ...item, 'productId': event.target.value }) }}\r\n                                />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"none\"\r\n                                    inputProps={{ className: classes.textFieldStyles }}\r\n                                    required={true}\r\n                                    fullWidth\r\n                                    autoFocus\r\n                                    value={item.title}\r\n                                    label=\"Title\"\r\n                                    InputLabelProps={{ shrink: true }}\r\n                                    onChange={(event) => { setItem({ ...item, 'Title': event.target.value }) }}\r\n                                />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    inputProps={{ className: classes.textFieldStyles }}\r\n                                    fullWidth\r\n                                    autoFocus\r\n                                    label=\"Name\"\r\n                                    value={item.name}\r\n                                    InputLabelProps={{ shrink: true }}\r\n                                    onChange={(event) => { setItem({ ...item, 'Name': event.target.value }) }}\r\n                                />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    autoFocus\r\n                                    inputProps={{ className: classes.textFieldStyles }}\r\n                                    label=\"Category\"\r\n                                    value={item.category}\r\n                                    InputLabelProps={{ shrink: true }}\r\n                                    onChange={(event) => { setItem({ ...item, 'Category': event.target.value }) }}\r\n                                />\r\n                                <TextareaAutosize\r\n                                    placeholder=\"Description\"\r\n                                    className={classes.textAreaDescription}\r\n                                    rowsMin={3}\r\n                                    defaultValue={item.description}\r\n                                    onChange={(event) => { setItem({ ...item, 'Description': event.target.value }) }}\r\n                                />\r\n                                <Box>\r\n                                    {lookImages === false ? images.map((item, i) => {\r\n                                        if (i === images.length) {\r\n                                            setLookImages(true);\r\n                                        }\r\n                                        if (i === 0) {\r\n                                            return (\r\n                                                <TextField\r\n                                                    key={i}\r\n                                                    variant=\"outlined\"\r\n                                                    margin=\"normal\"\r\n                                                    required\r\n                                                    fullWidth\r\n                                                    inputProps={{ className: classes.textFieldStyles }}\r\n                                                    autoFocus\r\n                                                    label=\"Images\"\r\n                                                    placeholder=\"ImageUrl ....\"\r\n                                                    InputLabelProps={{ shrink: true }}\r\n                                                    onChange={(event) => { typeof (event.target.value) != 'undefined' && SetCreateImagesHandler(`${event.target.value} `, item); setItem({ ...item, 'mainImage': event.target.value }); }}\r\n                                                />\r\n                                            )\r\n                                        }\r\n                                        return (\r\n                                            <TextField\r\n                                                key={i}\r\n                                                variant=\"outlined\"\r\n                                                margin=\"normal\"\r\n                                                required\r\n                                                fullWidth\r\n                                                inputProps={{ className: classes.textFieldStyles }}\r\n                                                autoFocus\r\n                                                label=\"Images\"\r\n                                                placeholder=\"ImageUrl ....\"\r\n                                                InputLabelProps={{ shrink: true }}\r\n                                                onChange={(event) => { typeof (event.target.value) != 'undefined' && SetCreateImagesHandler(`${event.target.value} `, item); }}\r\n                                            />\r\n                                        );\r\n                                    }) : <Typography>images label error</Typography>}\r\n                                </Box>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    inputProps={{ className: classes.textFieldStyles }}\r\n                                    autoFocus\r\n                                    label=\"Price\"\r\n                                    value={item.price}\r\n                                    InputLabelProps={{ shrink: true }}\r\n                                    onChange={(event) => { setItem({ ...item, 'Price': event.target.value }) }}\r\n                                />\r\n                            </Box>\r\n                            <Box\r\n                                justifyContent=\"space-between\"\r\n                                flexDirection=\"column\" display=\"flex\">\r\n                                <FormGroup>\r\n                                    <Box>\r\n                                        <Button variant=\"contained\" startIcon={<Add />}\r\n                                            onClick={CreateButtonHandler} color=\"primary\" >\r\n                                            Create\r\n                                    </Button>\r\n                                    </Box>\r\n                                    <FormControlLabel\r\n                                        control={<Switch\r\n                                            onChange={() => { labelCounter != '' ? setImagesLabelCounter([]) : setImagesLabelCounter(Guid.create()) }}\r\n                                            name=\"GenerateId\"\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        />}\r\n                                        label=\"Generate Id\"\r\n                                    />\r\n                                </FormGroup>\r\n                            </Box>\r\n                        </Box>\r\n                    </>\r\n                    :\r\n                    <Button>Client</Button>\r\n            }\r\n            <Button variant=\"contained\" color=\"primary\" onClick={SignOutButtonClicked}>\r\n                Sign Out\r\n            </Button>\r\n            { signOut && <p>Вы успешно вышли из аккаунта</p>}\r\n        </Container >\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\product\\ProductEdit.jsx",[],"D:\\Projects\\ElantroMarket\\client-app\\src\\features\\product\\ProductCategoryes.jsx",["162","163","164","165"],"import { Grid } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Paper, IconButton } from '@material-ui/core'\r\nimport agent from '../../app/api/agent'\r\nimport ProductList from '../dashboard/ProductList';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport { Tooltip } from '@material-ui/core'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Menu } from '@material-ui/icons'\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: '60px',\r\n        paddingLeft: '60px'\r\n    },\r\n    sortedSidebarBtn: {\r\n        margin: 0,\r\n        top: 'auto',\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 'auto',\r\n        position: 'fixed',\r\n    }\r\n}))\r\n\r\nconst ProductCategoryes = (props) => {\r\n    const classes = useStyles();\r\n    const [products, setProducts] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [openImage, setOpenImage] = useState(false);\r\n    const [images, setImages] = useState([]);\r\n    const [photoIndex, setPhotoIndex] = useState(0);\r\n    const [category, setCategory] = useState(props.location.aboutProps.category);\r\n    const onHandleOpenImage = (images) => {\r\n        setImages(images);\r\n        setOpenImage(true);\r\n    }\r\n    const onHandleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const onHandleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        agent.Filters.list(category).then((response) => {\r\n            let productsBackup = [];\r\n            response.forEach((product) => {\r\n                productsBackup.push(product);\r\n            })\r\n            setProducts(productsBackup);\r\n        })\r\n    }, []);\r\n    return (\r\n        <>\r\n            {openImage && (\r\n                <Lightbox mainSrc={images[photoIndex].imageUrl}\r\n                    nextSrc={images[(photoIndex + 1) % images.length].imageUrl}\r\n                    prevSrc={images[(photoIndex + images.length - 1) % images.length].imageUrl}\r\n                    onMovePrevRequest={() =>\r\n                        setPhotoIndex((photoIndex + images.length - 1) % images.length)\r\n                    }\r\n                    onMoveNextRequest={() =>\r\n                        setPhotoIndex((photoIndex + 1) % images.length)\r\n                    }\r\n                    onCloseRequest={() => { setOpenImage(false); setPhotoIndex(0) }} />\r\n            )}\r\n            <Grid container className={classes.root} spacing={2}>\r\n                <ProductList products={products} openImage={(image) => { onHandleOpenImage(image) }} />\r\n                <div className={classes.sortedSidebarBtn}>\r\n                    <Tooltip title={<p style={{ fontSize: '12px' }}>Сортировать</p>} placement=\"top\">\r\n                        <Fab color=\"primary\" aria-label=\"sort\" onClick={onHandleOpen}>\r\n                            <SortIcon />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </div>\r\n                <Drawer anchor=\"right\" open={open} onClose={onHandleClose}>\r\n                    <IconButton\r\n                        onClick={() => { setOpen(!open); }}\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        style={{}}\r\n                    >\r\n                        <Menu />\r\n                    </IconButton>\r\n                    <Divider />\r\n                    <List>\r\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <Divider />\r\n                    <List>\r\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n            </Grid >\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductCategoryes;\r\n","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\pages\\category\\TVPage.jsx",["166","167","168","169"],"import { Grid } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Paper, IconButton } from '@material-ui/core'\r\nimport agent from '../../api/agent'\r\nimport ProductList from '../../../features/dashboard/ProductList'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport { Tooltip } from '@material-ui/core'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Menu } from '@material-ui/icons'\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: '60px',\r\n        paddingLeft: '60px'\r\n    },\r\n    sortedSidebarBtn: {\r\n        margin: 0,\r\n        top: 'auto',\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 'auto',\r\n        position: 'fixed',\r\n    }\r\n}))\r\n\r\nconst TVPage = () => {\r\n    const classes = useStyles();\r\n    const [products, setProducts] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [openImage, setOpenImage] = useState(false);\r\n    const [images, setImages] = useState([]);\r\n    const [photoIndex, setPhotoIndex] = useState(0);\r\n    const [category, setCategory] = useState('TV');\r\n    const onHandleOpenImage = (images) => {\r\n        setImages(images);\r\n        setOpenImage(true);\r\n    }\r\n    const onHandleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const onHandleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        agent.Filters.list(category).then((response) => {\r\n            let productsBackup = [];\r\n            response.forEach((product) => {\r\n                productsBackup.push(product);\r\n            })\r\n            setProducts(productsBackup);\r\n        })\r\n    }, []);\r\n    return (\r\n        <>\r\n            {openImage && (\r\n                <Lightbox mainSrc={images[photoIndex].imageUrl}\r\n                    nextSrc={images[(photoIndex + 1) % images.length].imageUrl}\r\n                    prevSrc={images[(photoIndex + images.length - 1) % images.length].imageUrl}\r\n                    onMovePrevRequest={() =>\r\n                        setPhotoIndex((photoIndex + images.length - 1) % images.length)\r\n                    }\r\n                    onMoveNextRequest={() =>\r\n                        setPhotoIndex((photoIndex + 1) % images.length)\r\n                    }\r\n                    onCloseRequest={() => { setOpenImage(false); setPhotoIndex(0) }} />\r\n            )}\r\n            <Grid container className={classes.root} spacing={2}>\r\n                <ProductList products={products} openImage={(image) => { onHandleOpenImage(image) }} />\r\n                <div className={classes.sortedSidebarBtn}>\r\n                    <Tooltip title={<p style={{ fontSize: '12px' }}>Сортировать</p>} placement=\"top\">\r\n                        <Fab color=\"primary\" aria-label=\"sort\" onClick={onHandleOpen}>\r\n                            <SortIcon />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </div>\r\n                <Drawer anchor=\"right\" open={open} onClose={onHandleClose}>\r\n                    <IconButton\r\n                        onClick={() => { setOpen(!open); }}\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        style={{}}\r\n                    >\r\n                        <Menu />\r\n                    </IconButton>\r\n                    <Divider />\r\n                    <List>\r\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <Divider />\r\n                    <List>\r\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n            </Grid >\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TVPage;","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\pages\\category\\ComputersPage.jsx",["170","171","172","173"],"import { Grid } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Paper, IconButton } from '@material-ui/core'\r\nimport agent from '../../api/agent'\r\nimport ProductList from '../../../features/dashboard/ProductList'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport { Tooltip } from '@material-ui/core'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Menu } from '@material-ui/icons'\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: '60px',\r\n        paddingLeft: '60px'\r\n    },\r\n    sortedSidebarBtn: {\r\n        margin: 0,\r\n        top: 'auto',\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 'auto',\r\n        position: 'fixed',\r\n    }\r\n}))\r\n\r\nconst ComputersPage = () => {\r\n    const classes = useStyles();\r\n    const [products, setProducts] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [openImage, setOpenImage] = useState(false);\r\n    const [images, setImages] = useState([]);\r\n    const [photoIndex, setPhotoIndex] = useState(0);\r\n    const [category, setCategory] = useState('Computers');\r\n    const onHandleOpenImage = (images) => {\r\n        setImages(images);\r\n        setOpenImage(true);\r\n    }\r\n    const onHandleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const onHandleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        agent.Filters.list(category).then((response) => {\r\n            let productsBackup = [];\r\n            response.forEach((product) => {\r\n                productsBackup.push(product);\r\n            })\r\n            setProducts(productsBackup);\r\n        })\r\n    }, []);\r\n    return (\r\n        <>\r\n            {openImage && (\r\n                <Lightbox mainSrc={images[photoIndex].imageUrl}\r\n                    nextSrc={images[(photoIndex + 1) % images.length].imageUrl}\r\n                    prevSrc={images[(photoIndex + images.length - 1) % images.length].imageUrl}\r\n                    onMovePrevRequest={() =>\r\n                        setPhotoIndex((photoIndex + images.length - 1) % images.length)\r\n                    }\r\n                    onMoveNextRequest={() =>\r\n                        setPhotoIndex((photoIndex + 1) % images.length)\r\n                    }\r\n                    onCloseRequest={() => { setOpenImage(false); setPhotoIndex(0) }} />\r\n            )}\r\n            <Grid container className={classes.root} spacing={2}>\r\n                <ProductList products={products} openImage={(image) => { onHandleOpenImage(image) }} />\r\n                <div className={classes.sortedSidebarBtn}>\r\n                    <Tooltip title={<p style={{ fontSize: '12px' }}>Сортировать</p>} placement=\"top\">\r\n                        <Fab color=\"primary\" aria-label=\"sort\" onClick={onHandleOpen}>\r\n                            <SortIcon />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </div>\r\n                <Drawer anchor=\"right\" open={open} onClose={onHandleClose}>\r\n                    <IconButton\r\n                        onClick={() => { setOpen(!open); }}\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        style={{}}\r\n                    >\r\n                        <Menu />\r\n                    </IconButton>\r\n                    <Divider />\r\n                    <List>\r\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <Divider />\r\n                    <List>\r\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n            </Grid >\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ComputersPage;","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\pages\\category\\TabletPage.jsx",["174","175","176","177"],"import { Grid } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Paper, IconButton } from '@material-ui/core'\r\nimport agent from '../../api/agent'\r\nimport ProductList from '../../../features/dashboard/ProductList'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport { Tooltip } from '@material-ui/core'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Menu } from '@material-ui/icons'\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: '60px',\r\n        paddingLeft: '60px'\r\n    },\r\n    sortedSidebarBtn: {\r\n        margin: 0,\r\n        top: 'auto',\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 'auto',\r\n        position: 'fixed',\r\n    }\r\n}))\r\n\r\nconst TabletPage = () => {\r\n    const classes = useStyles();\r\n    const [products, setProducts] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [openImage, setOpenImage] = useState(false);\r\n    const [images, setImages] = useState([]);\r\n    const [photoIndex, setPhotoIndex] = useState(0);\r\n    const [category, setCategory] = useState('Tablets');\r\n    const onHandleOpenImage = (images) => {\r\n        setImages(images);\r\n        setOpenImage(true);\r\n    }\r\n    const onHandleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const onHandleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        agent.Filters.list(category).then((response) => {\r\n            let productsBackup = [];\r\n            response.forEach((product) => {\r\n                productsBackup.push(product);\r\n            })\r\n            setProducts(productsBackup);\r\n        })\r\n    }, []);\r\n    return (\r\n        <>\r\n            {openImage && (\r\n                <Lightbox mainSrc={images[photoIndex].imageUrl}\r\n                    nextSrc={images[(photoIndex + 1) % images.length].imageUrl}\r\n                    prevSrc={images[(photoIndex + images.length - 1) % images.length].imageUrl}\r\n                    onMovePrevRequest={() =>\r\n                        setPhotoIndex((photoIndex + images.length - 1) % images.length)\r\n                    }\r\n                    onMoveNextRequest={() =>\r\n                        setPhotoIndex((photoIndex + 1) % images.length)\r\n                    }\r\n                    onCloseRequest={() => { setOpenImage(false); setPhotoIndex(0) }} />\r\n            )}\r\n            <Grid container className={classes.root} spacing={2}>\r\n                <ProductList products={products} openImage={(image) => { onHandleOpenImage(image) }} />\r\n                <div className={classes.sortedSidebarBtn}>\r\n                    <Tooltip title={<p style={{ fontSize: '12px' }}>Сортировать</p>} placement=\"top\">\r\n                        <Fab color=\"primary\" aria-label=\"sort\" onClick={onHandleOpen}>\r\n                            <SortIcon />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </div>\r\n                <Drawer anchor=\"right\" open={open} onClose={onHandleClose}>\r\n                    <IconButton\r\n                        onClick={() => { setOpen(!open); }}\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        style={{}}\r\n                    >\r\n                        <Menu />\r\n                    </IconButton>\r\n                    <Divider />\r\n                    <List>\r\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <Divider />\r\n                    <List>\r\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n            </Grid >\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TabletPage;","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\pages\\category\\SmartphonesPage.jsx",["178","179","180","181"],"import { Grid } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Paper, IconButton } from '@material-ui/core'\r\nimport agent from '../../api/agent'\r\nimport ProductList from '../../../features/dashboard/ProductList'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport { Tooltip } from '@material-ui/core'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Menu } from '@material-ui/icons'\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: '60px',\r\n        paddingLeft: '60px'\r\n    },\r\n    sortedSidebarBtn: {\r\n        margin: 0,\r\n        top: 'auto',\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 'auto',\r\n        position: 'fixed',\r\n    }\r\n}))\r\n\r\nconst SmartphonesPage = () => {\r\n    const classes = useStyles();\r\n    const [products, setProducts] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [openImage, setOpenImage] = useState(false);\r\n    const [images, setImages] = useState([]);\r\n    const [photoIndex, setPhotoIndex] = useState(0);\r\n    const [category, setCategory] = useState('Smartphones');\r\n    const onHandleOpenImage = (images) => {\r\n        setImages(images);\r\n        setOpenImage(true);\r\n    }\r\n    const onHandleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const onHandleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        agent.Filters.list(category).then((response) => {\r\n            let productsBackup = [];\r\n            response.forEach((product) => {\r\n                productsBackup.push(product);\r\n            })\r\n            setProducts(productsBackup);\r\n        })\r\n    }, []);\r\n    return (\r\n        <>\r\n            {openImage && (\r\n                <Lightbox mainSrc={images[photoIndex].imageUrl}\r\n                    nextSrc={images[(photoIndex + 1) % images.length].imageUrl}\r\n                    prevSrc={images[(photoIndex + images.length - 1) % images.length].imageUrl}\r\n                    onMovePrevRequest={() =>\r\n                        setPhotoIndex((photoIndex + images.length - 1) % images.length)\r\n                    }\r\n                    onMoveNextRequest={() =>\r\n                        setPhotoIndex((photoIndex + 1) % images.length)\r\n                    }\r\n                    onCloseRequest={() => { setOpenImage(false); setPhotoIndex(0) }} />\r\n            )}\r\n            <Grid container className={classes.root} spacing={2}>\r\n                <ProductList products={products} openImage={(image) => { onHandleOpenImage(image) }} />\r\n                <div className={classes.sortedSidebarBtn}>\r\n                    <Tooltip title={<p style={{ fontSize: '12px' }}>Сортировать</p>} placement=\"top\">\r\n                        <Fab color=\"primary\" aria-label=\"sort\" onClick={onHandleOpen}>\r\n                            <SortIcon />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </div>\r\n                <Drawer anchor=\"right\" open={open} onClose={onHandleClose}>\r\n                    <IconButton\r\n                        onClick={() => { setOpen(!open); }}\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        style={{}}\r\n                    >\r\n                        <Menu />\r\n                    </IconButton>\r\n                    <Divider />\r\n                    <List>\r\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <Divider />\r\n                    <List>\r\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n            </Grid >\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SmartphonesPage;","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\pages\\category\\NotebooksPage.jsx",["182","183","184","185"],"import { Grid } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Paper, IconButton } from '@material-ui/core'\r\nimport agent from '../../api/agent'\r\nimport ProductList from '../../../features/dashboard/ProductList'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport { Tooltip } from '@material-ui/core'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Menu } from '@material-ui/icons'\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: '60px',\r\n        paddingLeft: '60px'\r\n    },\r\n    sortedSidebarBtn: {\r\n        margin: 0,\r\n        top: 'auto',\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 'auto',\r\n        position: 'fixed',\r\n    }\r\n}))\r\n\r\nconst NotebooksPage = () => {\r\n    const classes = useStyles();\r\n    const [products, setProducts] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [openImage, setOpenImage] = useState(false);\r\n    const [images, setImages] = useState([]);\r\n    const [photoIndex, setPhotoIndex] = useState(0);\r\n    const [category, setCategory] = useState('Notebooks');\r\n    const onHandleOpenImage = (images) => {\r\n        setImages(images);\r\n        setOpenImage(true);\r\n    }\r\n    const onHandleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const onHandleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        agent.Filters.list(category).then((response) => {\r\n            let productsBackup = [];\r\n            response.forEach((product) => {\r\n                productsBackup.push(product);\r\n            })\r\n            setProducts(productsBackup);\r\n        })\r\n    }, []);\r\n    return (\r\n        <>\r\n            {openImage && (\r\n                <Lightbox mainSrc={images[photoIndex].imageUrl}\r\n                    nextSrc={images[(photoIndex + 1) % images.length].imageUrl}\r\n                    prevSrc={images[(photoIndex + images.length - 1) % images.length].imageUrl}\r\n                    onMovePrevRequest={() =>\r\n                        setPhotoIndex((photoIndex + images.length - 1) % images.length)\r\n                    }\r\n                    onMoveNextRequest={() =>\r\n                        setPhotoIndex((photoIndex + 1) % images.length)\r\n                    }\r\n                    onCloseRequest={() => { setOpenImage(false); setPhotoIndex(0) }} />\r\n            )}\r\n            <Grid container className={classes.root} spacing={2}>\r\n                <ProductList products={products} openImage={(image) => { onHandleOpenImage(image) }} />\r\n                <div className={classes.sortedSidebarBtn}>\r\n                    <Tooltip title={<p style={{ fontSize: '12px' }}>Сортировать</p>} placement=\"top\">\r\n                        <Fab color=\"primary\" aria-label=\"sort\" onClick={onHandleOpen}>\r\n                            <SortIcon />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </div>\r\n                <Drawer anchor=\"right\" open={open} onClose={onHandleClose}>\r\n                    <IconButton\r\n                        onClick={() => { setOpen(!open); }}\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        style={{}}\r\n                    >\r\n                        <Menu />\r\n                    </IconButton>\r\n                    <Divider />\r\n                    <List>\r\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <Divider />\r\n                    <List>\r\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n            </Grid >\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NotebooksPage;","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\pages\\product\\ProductPage.jsx",["186","187","188","189","190","191","192","193","194","195"],{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":12},{"ruleId":"200","severity":1,"message":"204","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":18},{"ruleId":"200","severity":1,"message":"205","line":12,"column":8,"nodeType":"202","messageId":"203","endLine":12,"endColumn":16},{"ruleId":"200","severity":1,"message":"206","line":15,"column":8,"nodeType":"202","messageId":"203","endLine":15,"endColumn":16},{"ruleId":"200","severity":1,"message":"207","line":16,"column":8,"nodeType":"202","messageId":"203","endLine":16,"endColumn":25},{"ruleId":"200","severity":1,"message":"208","line":18,"column":8,"nodeType":"202","messageId":"203","endLine":18,"endColumn":14},{"ruleId":"200","severity":1,"message":"209","line":22,"column":10,"nodeType":"202","messageId":"203","endLine":22,"endColumn":24},{"ruleId":"200","severity":1,"message":"210","line":23,"column":10,"nodeType":"202","messageId":"203","endLine":23,"endColumn":17},{"ruleId":"200","severity":1,"message":"211","line":24,"column":7,"nodeType":"202","messageId":"203","endLine":24,"endColumn":18},{"ruleId":"200","severity":1,"message":"212","line":99,"column":16,"nodeType":"202","messageId":"203","endLine":99,"endColumn":23},{"ruleId":"200","severity":1,"message":"213","line":112,"column":9,"nodeType":"202","messageId":"203","endLine":112,"endColumn":30},{"ruleId":"200","severity":1,"message":"214","line":5,"column":8,"nodeType":"202","messageId":"203","endLine":5,"endColumn":14},{"ruleId":"200","severity":1,"message":"215","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":15},{"ruleId":"200","severity":1,"message":"216","line":8,"column":8,"nodeType":"202","messageId":"203","endLine":8,"endColumn":19},{"ruleId":"200","severity":1,"message":"204","line":9,"column":8,"nodeType":"202","messageId":"203","endLine":9,"endColumn":18},{"ruleId":"200","severity":1,"message":"205","line":12,"column":8,"nodeType":"202","messageId":"203","endLine":12,"endColumn":16},{"ruleId":"200","severity":1,"message":"217","line":13,"column":8,"nodeType":"202","messageId":"203","endLine":13,"endColumn":23},{"ruleId":"200","severity":1,"message":"218","line":14,"column":8,"nodeType":"202","messageId":"203","endLine":14,"endColumn":24},{"ruleId":"200","severity":1,"message":"219","line":20,"column":40,"nodeType":"202","messageId":"203","endLine":20,"endColumn":48},{"ruleId":"200","severity":1,"message":"220","line":21,"column":8,"nodeType":"202","messageId":"203","endLine":21,"endColumn":13},{"ruleId":"200","severity":1,"message":"221","line":76,"column":11,"nodeType":"202","messageId":"203","endLine":76,"endColumn":27},{"ruleId":"200","severity":1,"message":"222","line":80,"column":11,"nodeType":"202","messageId":"203","endLine":80,"endColumn":28},{"ruleId":"200","severity":1,"message":"223","line":84,"column":11,"nodeType":"202","messageId":"203","endLine":84,"endColumn":32},{"ruleId":"224","severity":1,"message":"225","line":95,"column":13,"nodeType":"226","endLine":100,"endColumn":15},{"ruleId":"200","severity":1,"message":"227","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":15},{"ruleId":"200","severity":1,"message":"201","line":10,"column":8,"nodeType":"202","messageId":"203","endLine":10,"endColumn":12},{"ruleId":"228","severity":1,"message":"229","line":59,"column":24,"nodeType":"230","messageId":"231","endLine":59,"endColumn":26},{"ruleId":"232","severity":1,"message":"233","line":36,"column":1,"nodeType":"234","endLine":40,"endColumn":2},{"ruleId":"200","severity":1,"message":"235","line":8,"column":8,"nodeType":"202","messageId":"203","endLine":8,"endColumn":14},{"ruleId":"200","severity":1,"message":"236","line":12,"column":10,"nodeType":"202","messageId":"203","endLine":12,"endColumn":13},{"ruleId":"200","severity":1,"message":"237","line":12,"column":15,"nodeType":"202","messageId":"203","endLine":12,"endColumn":34},{"ruleId":"200","severity":1,"message":"238","line":12,"column":36,"nodeType":"202","messageId":"203","endLine":12,"endColumn":40},{"ruleId":"200","severity":1,"message":"239","line":13,"column":8,"nodeType":"202","messageId":"203","endLine":13,"endColumn":16},{"ruleId":"200","severity":1,"message":"240","line":18,"column":8,"nodeType":"202","messageId":"203","endLine":18,"endColumn":19},{"ruleId":"200","severity":1,"message":"241","line":4,"column":17,"nodeType":"202","messageId":"203","endLine":4,"endColumn":27},{"ruleId":"200","severity":1,"message":"242","line":4,"column":29,"nodeType":"202","messageId":"203","endLine":4,"endColumn":48},{"ruleId":"200","severity":1,"message":"243","line":4,"column":50,"nodeType":"202","messageId":"203","endLine":4,"endColumn":56},{"ruleId":"200","severity":1,"message":"244","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":19},{"ruleId":"200","severity":1,"message":"245","line":2,"column":22,"nodeType":"202","messageId":"203","endLine":2,"endColumn":27},{"ruleId":"200","severity":1,"message":"246","line":4,"column":10,"nodeType":"202","messageId":"203","endLine":4,"endColumn":23},{"ruleId":"200","severity":1,"message":"247","line":4,"column":25,"nodeType":"202","messageId":"203","endLine":4,"endColumn":30},{"ruleId":"200","severity":1,"message":"248","line":5,"column":8,"nodeType":"202","messageId":"203","endLine":5,"endColumn":14},{"ruleId":"200","severity":1,"message":"249","line":14,"column":11,"nodeType":"202","messageId":"203","endLine":14,"endColumn":18},{"ruleId":"200","severity":1,"message":"245","line":2,"column":22,"nodeType":"202","messageId":"203","endLine":2,"endColumn":27},{"ruleId":"200","severity":1,"message":"250","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":17},{"ruleId":"200","severity":1,"message":"251","line":4,"column":27,"nodeType":"202","messageId":"203","endLine":4,"endColumn":33},{"ruleId":"200","severity":1,"message":"227","line":4,"column":98,"nodeType":"202","messageId":"203","endLine":4,"endColumn":103},{"ruleId":"200","severity":1,"message":"252","line":4,"column":142,"nodeType":"202","messageId":"203","endLine":4,"endColumn":153},{"ruleId":"200","severity":1,"message":"253","line":4,"column":155,"nodeType":"202","messageId":"203","endLine":4,"endColumn":165},{"ruleId":"200","severity":1,"message":"254","line":4,"column":167,"nodeType":"202","messageId":"203","endLine":4,"endColumn":175},{"ruleId":"200","severity":1,"message":"255","line":4,"column":177,"nodeType":"202","messageId":"203","endLine":4,"endColumn":188},{"ruleId":"200","severity":1,"message":"256","line":7,"column":15,"nodeType":"202","messageId":"203","endLine":7,"endColumn":19},{"ruleId":"200","severity":1,"message":"257","line":7,"column":21,"nodeType":"202","messageId":"203","endLine":7,"endColumn":27},{"ruleId":"200","severity":1,"message":"258","line":10,"column":10,"nodeType":"202","messageId":"203","endLine":10,"endColumn":18},{"ruleId":"200","severity":1,"message":"259","line":94,"column":12,"nodeType":"202","messageId":"203","endLine":94,"endColumn":21},{"ruleId":"200","severity":1,"message":"260","line":95,"column":20,"nodeType":"202","messageId":"203","endLine":95,"endColumn":29},{"ruleId":"200","severity":1,"message":"261","line":101,"column":11,"nodeType":"202","messageId":"203","endLine":101,"endColumn":27},{"ruleId":"262","severity":1,"message":"263","line":118,"column":37,"nodeType":"264","messageId":"265","endLine":118,"endColumn":39},{"ruleId":"200","severity":1,"message":"266","line":132,"column":11,"nodeType":"202","messageId":"203","endLine":132,"endColumn":28},{"ruleId":"228","severity":1,"message":"267","line":134,"column":28,"nodeType":"230","messageId":"231","endLine":134,"endColumn":30},{"ruleId":"200","severity":1,"message":"268","line":138,"column":11,"nodeType":"202","messageId":"203","endLine":138,"endColumn":30},{"ruleId":"228","severity":1,"message":"267","line":139,"column":28,"nodeType":"230","messageId":"231","endLine":139,"endColumn":30},{"ruleId":"200","severity":1,"message":"269","line":150,"column":11,"nodeType":"202","messageId":"203","endLine":150,"endColumn":25},{"ruleId":"228","severity":1,"message":"267","line":328,"column":76,"nodeType":"230","messageId":"231","endLine":328,"endColumn":78},{"ruleId":"200","severity":1,"message":"227","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":15},{"ruleId":"200","severity":1,"message":"201","line":10,"column":8,"nodeType":"202","messageId":"203","endLine":10,"endColumn":12},{"ruleId":"200","severity":1,"message":"270","line":45,"column":22,"nodeType":"202","messageId":"203","endLine":45,"endColumn":33},{"ruleId":"271","severity":1,"message":"272","line":65,"column":8,"nodeType":"273","endLine":65,"endColumn":10,"suggestions":"274"},{"ruleId":"200","severity":1,"message":"227","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":15},{"ruleId":"200","severity":1,"message":"201","line":10,"column":8,"nodeType":"202","messageId":"203","endLine":10,"endColumn":12},{"ruleId":"200","severity":1,"message":"270","line":45,"column":22,"nodeType":"202","messageId":"203","endLine":45,"endColumn":33},{"ruleId":"271","severity":1,"message":"272","line":65,"column":8,"nodeType":"273","endLine":65,"endColumn":10,"suggestions":"275"},{"ruleId":"200","severity":1,"message":"227","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":15},{"ruleId":"200","severity":1,"message":"201","line":10,"column":8,"nodeType":"202","messageId":"203","endLine":10,"endColumn":12},{"ruleId":"200","severity":1,"message":"270","line":45,"column":22,"nodeType":"202","messageId":"203","endLine":45,"endColumn":33},{"ruleId":"271","severity":1,"message":"272","line":65,"column":8,"nodeType":"273","endLine":65,"endColumn":10,"suggestions":"276"},{"ruleId":"200","severity":1,"message":"227","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":15},{"ruleId":"200","severity":1,"message":"201","line":10,"column":8,"nodeType":"202","messageId":"203","endLine":10,"endColumn":12},{"ruleId":"200","severity":1,"message":"270","line":45,"column":22,"nodeType":"202","messageId":"203","endLine":45,"endColumn":33},{"ruleId":"271","severity":1,"message":"272","line":65,"column":8,"nodeType":"273","endLine":65,"endColumn":10,"suggestions":"277"},{"ruleId":"200","severity":1,"message":"227","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":15},{"ruleId":"200","severity":1,"message":"201","line":10,"column":8,"nodeType":"202","messageId":"203","endLine":10,"endColumn":12},{"ruleId":"200","severity":1,"message":"270","line":45,"column":22,"nodeType":"202","messageId":"203","endLine":45,"endColumn":33},{"ruleId":"271","severity":1,"message":"272","line":65,"column":8,"nodeType":"273","endLine":65,"endColumn":10,"suggestions":"278"},{"ruleId":"200","severity":1,"message":"227","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":15},{"ruleId":"200","severity":1,"message":"201","line":10,"column":8,"nodeType":"202","messageId":"203","endLine":10,"endColumn":12},{"ruleId":"200","severity":1,"message":"270","line":45,"column":22,"nodeType":"202","messageId":"203","endLine":45,"endColumn":33},{"ruleId":"271","severity":1,"message":"272","line":65,"column":8,"nodeType":"273","endLine":65,"endColumn":10,"suggestions":"279"},{"ruleId":"200","severity":1,"message":"245","line":2,"column":22,"nodeType":"202","messageId":"203","endLine":2,"endColumn":27},{"ruleId":"200","severity":1,"message":"280","line":3,"column":38,"nodeType":"202","messageId":"203","endLine":3,"endColumn":54},{"ruleId":"200","severity":1,"message":"281","line":3,"column":68,"nodeType":"202","messageId":"203","endLine":3,"endColumn":78},{"ruleId":"200","severity":1,"message":"282","line":8,"column":20,"nodeType":"202","messageId":"203","endLine":8,"endColumn":49},{"ruleId":"200","severity":1,"message":"283","line":8,"column":51,"nodeType":"202","messageId":"203","endLine":8,"endColumn":56},{"ruleId":"200","severity":1,"message":"284","line":8,"column":67,"nodeType":"202","messageId":"203","endLine":8,"endColumn":71},{"ruleId":"200","severity":1,"message":"285","line":9,"column":8,"nodeType":"202","messageId":"203","endLine":9,"endColumn":12},{"ruleId":"200","severity":1,"message":"286","line":64,"column":5,"nodeType":"202","messageId":"203","endLine":64,"endColumn":18},{"ruleId":"200","severity":1,"message":"287","line":68,"column":16,"nodeType":"202","messageId":"203","endLine":68,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":90,"column":45,"nodeType":"290","endLine":90,"endColumn":97},"no-native-reassign",["291"],"no-negated-in-lhs",["292"],"no-unused-vars","'clsx' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'Drawer' is defined but never used.","'ShoppingBasket' is defined but never used.","'NavLink' is defined but never used.","'drawerWidth' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'handleProfileMenuOpen' is assigned a value but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'CssBaseline' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'Computer' is defined but never used.","'agent' is defined but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","'HandleCategoryClicked' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Paper' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","'Box' is defined but never used.","'responsiveFontSizes' is defined but never used.","'Link' is defined but never used.","'Lightbox' is defined but never used.","'ProductEdit' is defined but never used.","'withRouter' is defined but never used.","'RouteComponentProps' is defined but never used.","'Router' is defined but never used.","'Container' is defined but never used.","'theme' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'SignUp' is defined but never used.","'classes' is assigned a value but never used.","'flexbox' is defined but never used.","'Select' is defined but never used.","'ButtonGroup' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Edit' is defined but never used.","'Delete' is defined but never used.","'Redirect' is defined but never used.","'productId' is assigned a value but never used.","'setImages' is assigned a value but never used.","'SetImagesHandler' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'EditButtonHandler' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'DeleteButtonHandler' is assigned a value but never used.","'setItemHandler' is assigned a value but never used.","'setCategory' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.","ArrayExpression",["293"],["294"],["295"],["296"],["297"],["298"],"'TextareaAutosize' is defined but never used.","'IconButton' is defined but never used.","'FormatListNumberedRtlOutlined' is defined but never used.","'Label' is defined but never used.","'Send' is defined but never used.","'guid' is defined but never used.","'hubConnection' is assigned a value but never used.","'setId' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"299","fix":"300"},{"desc":"299","fix":"301"},{"desc":"299","fix":"302"},{"desc":"299","fix":"303"},{"desc":"299","fix":"304"},{"desc":"299","fix":"305"},"Update the dependencies array to be: [category]",{"range":"306","text":"307"},{"range":"308","text":"307"},{"range":"309","text":"307"},{"range":"310","text":"307"},{"range":"311","text":"307"},{"range":"312","text":"307"},[2254,2256],"[category]",[2218,2220],[2232,2234],[2227,2229],[2236,2238],[2232,2234]]