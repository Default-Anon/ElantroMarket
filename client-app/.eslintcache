[{"D:\\Projects\\ElantroMarket\\client-app\\src\\index.js":"1","D:\\Projects\\ElantroMarket\\client-app\\src\\reportWebVitals.js":"2","D:\\Projects\\ElantroMarket\\client-app\\src\\App.js":"3","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\nav\\NavBar.jsx":"4","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\sidebar\\Sidebar.jsx":"5","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\dashboard\\ProductDashboard.jsx":"6","D:\\Projects\\ElantroMarket\\client-app\\src\\app\\api\\agent.js":"7","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\dashboard\\ProductList.jsx":"8"},{"size":431,"mtime":1608794888589,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1608794019852,"results":"11","hashOfConfig":"10"},{"size":246,"mtime":1608919151035,"results":"12","hashOfConfig":"10"},{"size":7170,"mtime":1608894260635,"results":"13","hashOfConfig":"10"},{"size":4483,"mtime":1608918454234,"results":"14","hashOfConfig":"10"},{"size":1673,"mtime":1608922357070,"results":"15","hashOfConfig":"10"},{"size":748,"mtime":1608916795029,"results":"16","hashOfConfig":"10"},{"size":779,"mtime":1608921150208,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1iq995v",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"D:\\Projects\\ElantroMarket\\client-app\\src\\index.js",[],["39","40"],"D:\\Projects\\ElantroMarket\\client-app\\src\\reportWebVitals.js",[],"D:\\Projects\\ElantroMarket\\client-app\\src\\App.js",[],"D:\\Projects\\ElantroMarket\\client-app\\src\\features\\nav\\NavBar.jsx",["41","42","43","44","45"],"import React, { useState } from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Sidebar from './../sidebar/Sidebar';\r\nimport { Container } from '@material-ui/core';\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '40ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"absolute\" color=\"inherit\" style={{ backgroundColor: 'gray' }}>\r\n        <Toolbar>\r\n          <Sidebar open={open} />\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            ElantroMarket\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <Container>\r\n              <InputBase\r\n                placeholder=\"Searchâ€¦\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n\r\n              />\r\n            </Container>\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\sidebar\\Sidebar.jsx",["46","47","48","49","50","51","52","53","54","55"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Menu } from '@material-ui/icons'\r\nconst drawerWidth = 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        background: 'gray',\r\n        color: 'white'\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(8) + 1,\r\n        },\r\n        background: 'gray',\r\n        color: 'white'\r\n    },\r\n    toolbar: {\r\n        backgroundColor: 'gray',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    paperSidebar: {\r\n        background: 'gray',\r\n        color: 'white'\r\n    },\r\n}));\r\n\r\nexport default function Sidebar(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(props.open);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            classes={{ paper: classes.paperSidebar, root: classes.rootSidebar }}\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                }),\r\n            }}\r\n        >\r\n            <div className={classes.toolbar}>\r\n                <IconButton\r\n                    onClick={() => { setOpen(!open); }}\r\n                    edge=\"start\"\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    style={{ paddingLeft: theme.spacing(3) }}\r\n                >\r\n                    <Menu />\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Drawer>\r\n    );\r\n}\r\n","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\dashboard\\ProductDashboard.jsx",["56"],"D:\\Projects\\ElantroMarket\\client-app\\src\\app\\api\\agent.js",["57"],"import axios from 'axios'\r\n\r\naxios.defaults.baseURL = \"https://localhost:5001/api\";\r\n\r\n\r\nconst responseBody = (response) => response.data;\r\n\r\nconst requests = {\r\n    get: (url) => axios.get(url).then(responseBody),\r\n    post: (url, body) => axios.post(url, body).then(responseBody),\r\n    put: (url, body) => axios.put(url, body).then(responseBody),\r\n    del: (url) => axios.delete(url).then(responseBody)\r\n}\r\n\r\nconst Products = {\r\n    list: () => requests.get('/product'),\r\n    details: (id) => requests.get(`/product/${id}`),\r\n    create: (product) => requests.post('/product', product),\r\n    update: (id, product) => requests.put(`/product${id}`, product),\r\n    delete: (id) => requests.del(`/product/${id}`)\r\n}\r\nexport default {\r\n    Products\r\n}","D:\\Projects\\ElantroMarket\\client-app\\src\\features\\dashboard\\ProductList.jsx",["58"],"import React from 'react';\r\nimport { Grid, Card } from '@material-ui/core'\r\n\r\nconst ProductList = (props) => {\r\n    return (\r\n        <>\r\n            { props.products === null ? null :\r\n                props.products.map((product, id) => {\r\n                    return (\r\n                        <Grid item key={product.id} lg={12} sm={12} xs={12} md={6} style={{ border: '2px solid green' }\r\n                        }>\r\n                            <p>{product.name}</p>\r\n                            <p>{product.price}</p>\r\n                            <p>{product.title}</p>\r\n                            <p>{product.description}</p>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductList;\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":12},{"ruleId":"63","severity":1,"message":"67","line":12,"column":8,"nodeType":"65","messageId":"66","endLine":12,"endColumn":16},{"ruleId":"63","severity":1,"message":"68","line":18,"column":8,"nodeType":"65","messageId":"66","endLine":18,"endColumn":14},{"ruleId":"63","severity":1,"message":"69","line":21,"column":7,"nodeType":"65","messageId":"66","endLine":21,"endColumn":18},{"ruleId":"63","severity":1,"message":"70","line":91,"column":16,"nodeType":"65","messageId":"66","endLine":91,"endColumn":23},{"ruleId":"63","severity":1,"message":"71","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":14},{"ruleId":"63","severity":1,"message":"72","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":15},{"ruleId":"63","severity":1,"message":"73","line":8,"column":8,"nodeType":"65","messageId":"66","endLine":8,"endColumn":19},{"ruleId":"63","severity":1,"message":"74","line":9,"column":8,"nodeType":"65","messageId":"66","endLine":9,"endColumn":18},{"ruleId":"63","severity":1,"message":"67","line":12,"column":8,"nodeType":"65","messageId":"66","endLine":12,"endColumn":16},{"ruleId":"63","severity":1,"message":"75","line":13,"column":8,"nodeType":"65","messageId":"66","endLine":13,"endColumn":23},{"ruleId":"63","severity":1,"message":"76","line":14,"column":8,"nodeType":"65","messageId":"66","endLine":14,"endColumn":24},{"ruleId":"63","severity":1,"message":"77","line":74,"column":11,"nodeType":"65","messageId":"66","endLine":74,"endColumn":27},{"ruleId":"63","severity":1,"message":"78","line":78,"column":11,"nodeType":"65","messageId":"66","endLine":78,"endColumn":28},{"ruleId":"79","severity":1,"message":"80","line":90,"column":13,"nodeType":"81","endLine":95,"endColumn":15},{"ruleId":"63","severity":1,"message":"82","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":22,"column":1,"nodeType":"85","endLine":24,"endColumn":2},{"ruleId":"63","severity":1,"message":"86","line":2,"column":16,"nodeType":"65","messageId":"66","endLine":2,"endColumn":20},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'clsx' is defined but never used.","Identifier","unusedVar","'MenuIcon' is defined but never used.","'Drawer' is defined but never used.","'drawerWidth' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'CssBaseline' is defined but never used.","'Typography' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Paper' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]